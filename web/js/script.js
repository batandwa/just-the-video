function main() {
  var domain = getDomain();

  Observable.addObserver(youtubeObserver);
  Observable.addObserver(tedObserver);

  Observable.notifyObservers(domain, window.location.href);
}

/**
 * Gets domain name from the address bar.
 * @return {string} The domain name without subdomains.
 */
function getDomain() {
  var loc = window.location;
  return loc.hostname;
}

/**
 * The observable where we'll register and centrally distribute requests to
 * convert a url to an Iframe.
 * @type {Object}
 */
var Observable = {
  /**
   * Available repository of observers.
   * @type {Array}
   */
  observers: [],

  /**
   * Adds an observer to the list.
   * @param  {Object} observer A function to handle one of the domains hosting
   *                           videos.
   * @todo                     Handle situations where the handler does not
   *                           exist.
   * @return {void}
   */
  addObserver: function(observer) {
    this.observers.push(observer)
  },

  /**
   * Remove an observer from the list.
   * @param  {Object} observer The function to be removed from the handler list.
   * @todo                     Handle situations where the handler does not
   *                           exist.
   * @return {void}
   */
  removeObserver: function(observer) {
    var index = this.observers.indexOf(observer)

    if (~index) {
      this.observers.splice(index, 1)
    }
  },

  /**
   * Request an Iframe from the list of handlers available.
   * @param  {string} domain The domain name.
   * @param  {[type]} url    The full URL of the domain name.
   * @todo                   Handle extracting of the domain name in here.
   * @return {string}        The Iframe generated by one of the profiders.
   *                         Null is returned if none of the providers
   *                         can handle this domain.
   */
  notifyObservers: function(domain, url) {
    for (var i = this.observers.length - 1; i >= 0; i--) {
      this.observers[i](domain, url)
    };
  }
}

youtubeObserver = function(domain, url) {
  var code = '<iframe width="400" height="300" src="https://www.youtube.com/embed/JjFwNlbIYXs" frameborder="0" allowfullscreen></iframe>';

  var fragment = createElement(code);
  document.body.insertBefore(fragment, document.body.childNodes[0]);
  
  // var script=document.createElement('script');
  // script.type='text/javascript';
  // script.src="https://cdn.adf.ly/js/link-converter.js";

document.body.appendChild(script);
  console.log("Loading Youtube video: " + url)
};

tedObserver = function(domain, url) {
  console.log("Loading Ted video: " + url)
};

function createElement(htmlStr) {
    var frag = document.createDocumentFragment(),
        temp = document.createElement('div');
    temp.innerHTML = htmlStr;
    while (temp.firstChild) {
        frag.appendChild(temp.firstChild);
    }
    return frag;
}


main();
